

import java.nio.file.*;

public class FileWatcherExample {

    public static void main(String[] args) throws Exception {
        // Define the file to watch
        Path filePath = Paths.get("file_to_watch.txt");

        // Create a WatchService
        WatchService watchService = FileSystems.getDefault().newWatchService();
        
        // Register the directory containing the file
        Path parentDir = filePath.getParent();
        if (parentDir != null) {
            parentDir.register(watchService, StandardWatchEventKinds.ENTRY_MODIFY);
        } else {
            System.err.println("Unable to register watch service. No parent directory found.");
            return;
        }

        // Get the initial file size
        long lastSize = Files.size(filePath);

        // Start watching for events
        System.out.println("Watching for file changes...");
        while (true) {
            // Check for changes in file size
            long currentSize = Files.size(filePath);
            if (currentSize != lastSize) {
                System.out.println("File modified: " + filePath);
                // Read and print the new lines added to the file
                Files.lines(filePath).forEach(System.out::println);
                lastSize = currentSize;
            }

            // Wait for file system events
            WatchKey key;
            try {
                key = watchService.take();
            } catch (InterruptedException ex) {
                return;
            }

            // Reset the key
            boolean valid = key.reset();
            if (!valid) {
                break;
            }
        }
    }
}
