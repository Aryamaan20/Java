
import java.nio.file.*;
import java.util.concurrent.TimeUnit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class FileMonitor {
    public static void main(String[] args) {
        String filename = "output.txt";
        Path filePath = Paths.get(System.getProperty("user.dir"), filename);
        long lastSize = getFileSize(filePath);

        System.out.println("Monitoring " + filename + " for changes...");

        while (true) {
            try {
                TimeUnit.SECONDS.sleep(5); // Poll every 5 seconds
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            long currentSize = getFileSize(filePath);

            if (currentSize > lastSize) {
                System.out.println("Checking for new lines in " + filename);
                List<String> newLines = getNewLines(filePath, lastSize);
                if (newLines != null && !newLines.isEmpty()) {
                    System.out.println("New lines added to " + filename + ":");
                    for (String line : newLines) {
                        System.out.println(line);
                    }
                    lastSize = currentSize;
                }
            }
        }
    }

    private static long getFileSize(Path filePath) {
        try {
            return Files.size(filePath);
        } catch (IOException e) {
            e.printStackTrace();
            return 0;
        }
    }

    private static List<String> getNewLines(Path filePath, long lastSize) {
        List<String> newLines = new ArrayList<>();
        try {
            List<String> lines = Files.readAllLines(filePath);
            int start = (int) lastSize;
            int end = lines.size();
            if (start < end) {
                newLines = lines.subList(start, end);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return newLines;
    }
}
